<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>n = 0;
image_speed = 0.35;
alarm[1] = 60;
global.seconds = 59;
global.minutes = 1;
angle = 0;
frame = 0;
global.pizza = 0;
global.pizzameter = 0;
global.pillarhunger = 4000;
uTime = shader_get_uniform(shdr_wind, "Time");
basement = 0;
shake_mag = 0;
shake_mag_acc = 0;
timestop = 1;
zoom = 0;
chargecamera = 0;
alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (timestop == 0)
{
    global.seconds -= 1;
    
    if (global.seconds &lt; 0)
    {
        global.seconds = 59;
        global.minutes -= 1;
    }
}

alarm[1] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var target;

if (room == rank_room || room == timesuproom)
    visible = false;
else
    visible = true;

if (global.panic == 1)
    timestop = 0;
else
    timestop = 1;

if (room == timesuproom)
    timestop = 1;

if (global.seconds == 0 &amp;&amp; global.minutes == 0 &amp;&amp; room != timesuproom &amp;&amp; !instance_exists(obj_endlevelfade))
{
    obj_player.state = 27;
    room = timesuproom;
    obj_player.image_index = 0;
}

if (global.seconds &lt; 0)
{
    global.seconds = 59;
    global.minutes -= 1;
}

if (global.seconds &gt; 59)
{
    global.minutes += 1;
    global.seconds -= 59;
}

if ((global.panic == 1 &amp;&amp; global.minutes &lt; 1) || obj_player.sprite_index == spr_player_timesup)
{
    shake_mag = 2;
    shake_mag_acc = 3 / room_speed;
}
else if (global.panic == 1 &amp;&amp; basement == 0)
{
    shake_mag = 2;
    shake_mag_acc = 3 / room_speed;
}

if (shake_mag &gt; 0)
{
    shake_mag -= shake_mag_acc;
    
    if (shake_mag &lt; 0)
        shake_mag = 0;
}

if (instance_exists(obj_player) &amp;&amp; obj_player.state != 27 &amp;&amp; obj_player.state != 46)
{
    target = 1;
    
    if (obj_player.state == 81 || obj_player.state == 28)
    {
        if (chargecamera &gt; (obj_player.xscale * 100))
            chargecamera -= 2;
        
        if (chargecamera &lt; (obj_player.xscale * 100))
            chargecamera += 2;
        
        view_xview[0] = (target.x - (view_wview[0] / 2)) + chargecamera;
    }
    else
    {
        if (chargecamera &gt; 0)
            chargecamera -= 2;
        
        if (chargecamera &lt; 0)
            chargecamera += 2;
        
        view_xview[0] = (target.x - (view_wview[0] / 2)) + chargecamera;
    }
    
    view_xview[0] = clamp(view_xview[0], 0, room_width - view_wview[0]);
    view_yview[0] = target.y - (view_hview[0] / 2);
    view_yview[0] = clamp(view_yview[0], 0, room_height - view_hview[0]);
    
    if (shake_mag != 0)
    {
        view_xview[0] = (target.x - (view_wview[0] / 2)) + chargecamera;
        view_xview[0] = clamp(view_xview[0], 0, room_width - view_wview[0]);
        view_yview[0] = (target.y - (view_hview[0] / 2)) + irandom_range(-shake_mag, shake_mag);
        view_yview[0] = clamp(view_yview[0], 0 + irandom_range(-shake_mag, shake_mag), (room_height - view_hview[0]) + irandom_range(-shake_mag, shake_mag));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = obj_player.x;
y = obj_player.y;

with (obj_camera)
{
    shake_mag = 0;
    shake_mag_acc = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(960, 540);
pal_swap_set(232, global.paletteselect, 0);

if (global.playerhealth == 8)
{
    draw_sprite_ext(spr_pizzahealthbar, 0, 100, 80, 1, 1, 1, c_white, alpha);
}
else if (global.playerhealth == 7)
{
    draw_sprite_ext(spr_pizzahealthbar, 1, 100, 80, 1, 1, 1, c_white, alpha);
}
else if (global.playerhealth == 6)
{
    draw_sprite_ext(spr_pizzahealthbar, 2, 100, 80, 1, 1, 1, c_white, alpha);
}
else if (global.playerhealth == 5)
{
    draw_sprite_ext(spr_pizzahealthbar, 3, 100, 80, 1, 1, 1, c_white, alpha);
}
else if (global.playerhealth == 4)
{
    draw_sprite_ext(spr_pizzahealthbar, 4, 100, 80, 1, 1, 1, c_white, alpha);
}
else if (global.playerhealth == 3)
{
    draw_sprite_ext(spr_pizzahealthbar, 5, 100, 80, 1, 1, 1, c_white, alpha);
}
else if (global.playerhealth == 2)
{
    draw_sprite_ext(spr_pizzahealthbar, 6, 100, 80, 1, 1, 1, c_white, alpha);
}
else if (global.playerhealth == 1)
{
    draw_sprite_ext(spr_pizzahealthbar, 7, 100, 80, 1, 1, 1, c_white, alpha);
}
else
{
}

if (obj_player.state != 46)
{
    if (!(obj_player.state == 60 || obj_player.state == 14 || obj_player.state == 45 || (obj_player.state == 45 &amp;&amp; obj_player.sprite_index == spr_player_bossintro) || (obj_player.state == 45 &amp;&amp; obj_player.sprite_index == spr_player_idle) || obj_player.state == 18 || obj_player.state == 28 || obj_player.state == 27 || obj_player.state == 24 || obj_player.state == 29 || obj_player.state == 33 || obj_player.state == 83 || obj_player.state == 37 || obj_player.state == 38 || obj_player.state == 42 || obj_player.state == 39 || obj_player.state == 40 || obj_player.state == 41 || obj_player.state == 48 || (obj_player.state == 45 &amp;&amp; obj_player.sprite_index == spr_player_levelcomplete) || (obj_player.state == 68 &amp;&amp; shake_mag &gt; 0) || obj_player.state == 82 || obj_player.state == 65 || obj_player.state == 54 || obj_player.state == 56 || obj_player.state == 61 || obj_player.state == 81 || obj_player.state == 53 || obj_player.state == 64 || obj_player.state == 47 || obj_player.sprite_index == spr_player_victory || obj_player.state == 38))
    {
        if (global.playerhealth == 1)
            draw_sprite_ext(spr_pepinoHUD1hp, -1, 150, 100, 1, 1, 1, c_white, alpha);
        else if (obj_player.angry == 1)
            draw_sprite_ext(spr_pepinoHUD3hp, -1, 150, 100, 1, 1, 1, c_white, alpha);
        else
            draw_sprite_ext(spr_pepinoHUD, -1, 150, 100, 1, 1, 1, c_white, alpha);
    }
    else if (obj_player.state == 83 || (obj_player.state == 68 &amp;&amp; shake_mag &gt; 0))
    {
        draw_sprite_ext(spr_pepinoHUDstun, -1, 150, 100, 1, 1, 1, c_white, alpha);
    }
    else if (obj_player.sprite_index == spr_player_victory || obj_player.state == 47 || obj_player.state == 53 || obj_player.state == 14 || (obj_player.state == 45 &amp;&amp; obj_player.sprite_index == spr_player_levelcomplete))
    {
        draw_sprite_ext(spr_pepinoHUDhappy, -1, 150, 100, 1, 1, 1, c_white, alpha);
    }
    else if (obj_player.state == 60 || obj_player.state == 29 || obj_player.state == 24 || obj_player.state == 82 || obj_player.state == 65 || obj_player.state == 48 || obj_player.state == 54 || obj_player.state == 33 || obj_player.state == 56 || obj_player.state == 37 || obj_player.state == 38 || obj_player.state == 42 || obj_player.state == 39 || obj_player.state == 40 || obj_player.state == 41)
    {
        draw_sprite_ext(spr_pepinoHUDmach1, -1, 150, 100, 1, 1, 1, c_white, alpha);
    }
    else if (obj_player.state == 61)
    {
        draw_sprite_ext(spr_pepinoHUDmach2, -1, 150, 100, 1, 1, 1, c_white, alpha);
    }
    else if (obj_player.state == 81 || obj_player.state == 28)
    {
        draw_sprite_ext(spr_pepinoHUDmach3, -1, 150, 100, 1, 1, 1, c_white, alpha);
    }
    else if (obj_player.state == 64 || obj_player.state == 27 || obj_player.state == 18 || (obj_player.state == 45 &amp;&amp; obj_player.sprite_index == spr_player_bossintro) || (obj_player.state == 45 &amp;&amp; obj_player.sprite_index == spr_player_idle))
    {
        draw_sprite_ext(spr_pepinoHUDhurt, -1, 150, 100, 1, 1, 1, c_white, alpha);
    }
    
    shader_reset();
    
    if (obj_player.mach2 &lt; 7)
        draw_sprite_ext(spr_speedbar, 0, 150, 140, 1, 1, 1, c_white, alpha);
    else if (obj_player.mach2 &gt;= 7 &amp;&amp; obj_player.mach2 &lt; 35)
        draw_sprite_ext(spr_speedbar, 1, 150, 140, 1, 1, 1, c_white, alpha);
    else if (obj_player.mach2 &gt;= 35 &amp;&amp; obj_player.mach2 &lt; 50)
        draw_sprite_ext(spr_speedbar, 2, 150, 140, 1, 1, 1, c_white, alpha);
    else if (obj_player.mach2 &gt;= 50 &amp;&amp; obj_player.mach2 &lt; 75)
        draw_sprite_ext(spr_speedbar, 3, 150, 140, 1, 1, 1, c_white, alpha);
    else if (obj_player.mach2 &gt;= 75 &amp;&amp; obj_player.mach2 &lt; 100)
        draw_sprite_ext(spr_speedbar, 4, 150, 140, 1, 1, 1, c_white, alpha);
    else if (obj_player.mach2 &gt;= 100)
        draw_sprite_ext(spr_speedbarmax, -1, 150, 140, 1, 1, 1, c_white, alpha);
    
    if (obj_player.y &lt; 200 &amp;&amp; obj_player.x &lt; 200)
        alpha = 0.5;
    else
        alpha = 1;
    
    font = font_add_sprite_ext(spr_font, "ABCDEFGHIJKLMNOPQRSTUVWXYZ!.1234567890:", 1, 0);
    draw_set_font(font);
    draw_set_halign(fa_center);
    draw_set_color(c_white);
    
    if (timestop == 0)
    {
        if (global.seconds &lt; 10)
        {
            if (global.minutes &lt; 1)
                draw_set_color(c_red);
            else
                draw_set_color(c_white);
            
            draw_text(random_range(1, -1) + 480, random_range(1, -1) + 65, string(global.minutes) + ":0" + string(global.seconds));
        }
        else if (global.seconds &gt;= 10)
        {
            if (global.minutes &lt; 1)
                draw_set_color(c_red);
            else
                draw_set_color(c_white);
            
            draw_text(random_range(1, -1) + 480, random_range(1, -1) + 65, string(global.minutes) + ":" + string(global.seconds));
        }
    }
    
    if (global.key_inv == 1)
        draw_sprite_ext(spr_key, -1, 50, 30, 1, 1, 1, c_white, alpha);
    
    draw_sprite_ext(spr_inv, -1, 50, 30, 1, 1, 1, c_white, alpha);
}

draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
