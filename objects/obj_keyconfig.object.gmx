<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pressup</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>remapphase = 0;
image_speed = 0.35;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_getinput();

if (remapphase == 0)
{
    sprite_index = spr_pressup;
    
    if (keyboard_check_pressed(vk_anykey))
    {
        global.key_up = keyboard_key;
        remapphase += 1;
    }
}
else if (remapphase == 1)
{
    sprite_index = spr_pressright;
    
    if (keyboard_check_pressed(vk_anykey))
    {
        global.key_right = keyboard_key;
        remapphase += 1;
    }
}
else if (remapphase == 2)
{
    sprite_index = spr_pressleft;
    
    if (keyboard_check_pressed(vk_anykey))
    {
        global.key_left = keyboard_key;
        remapphase += 1;
    }
}
else if (remapphase == 3)
{
    sprite_index = spr_pressdown;
    
    if (keyboard_check_pressed(vk_anykey))
    {
        global.key_down = keyboard_key;
        remapphase += 1;
    }
}
else if (remapphase == 4)
{
    sprite_index = spr_pressjump;
    
    if (keyboard_check_pressed(vk_anykey))
    {
        global.key_jump = keyboard_key;
        remapphase += 1;
    }
}
else if (remapphase == 5)
{
    sprite_index = spr_pressslap;
    
    if (keyboard_check_pressed(vk_anykey))
    {
        global.key_slap = keyboard_key;
        remapphase += 1;
    }
}
else if (remapphase == 6)
{
    sprite_index = spr_pressdash;
    
    if (keyboard_check_pressed(vk_anykey))
    {
        global.key_attack = keyboard_key;
        remapphase += 1;
    }
}
else if (remapphase == 7)
{
    sprite_index = spr_ok;
    
    if (key_jump)
        instance_destroy();
    
    if (key_slap)
        remapphase = 0;
}

ini_open("saveData.ini");
ini_write_string("ControlsKeys", "up", global.key_up);
ini_write_string("ControlsKeys", "right", global.key_right);
ini_write_string("ControlsKeys", "left", global.key_left);
ini_write_string("ControlsKeys", "down", global.key_down);
ini_write_string("ControlsKeys", "jump", global.key_jump);
ini_write_string("ControlsKeys", "slap", global.key_slap);
ini_write_string("ControlsKeys", "attack", global.key_attack);
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
