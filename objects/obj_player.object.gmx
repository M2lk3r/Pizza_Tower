<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>-1</persistent>
  <parentName>self</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_player)
{
    grav = 0.5;
    hsp = 0;
    vsp = 0;
    global.playerhealth = 5;
    xscale = 1;
    yscale = 1;
    sprite_index = spr_player_crouchslide;
    facehurt = 1;
    steppy = 0;
    movespeed = 19;
    movespeedmax = 5;
    jumpstop = 0;
    start_running = 1;
    visible = true;
    state = 62;
    turn = 0;
    jumpAnim = 1;
    dashAnim = 1;
    landAnim = 0;
    machslideAnim = 0;
    moveAnim = 1;
    stopAnim = 1;
    crouchslideAnim = 1;
    crouchAnim = 1;
    machhitAnim = 0;
    stompAnim = 0;
    inv_frames = 0;
    turning = 0;
    hurtbounce = 0;
    hurted = 0;
    autodash = 0;
    mach2 = 0;
    input_buffer_jump = 8;
    input_buffer_secondjump = 8;
    input_buffer_highjump = 8;
    player_x = x;
    player_y = y;
    targetRoom = 0;
    flash = 0;
    global.key_inv = 0;
    global.shroomfollow = 0;
    global.cheesefollow = 0;
    global.tomatofollow = 0;
    global.sausagefollow = 0;
    global.pineapplefollow = 0;
    global.keyget = 0;
    global.collect = 0;
    global.ammo = 0;
    global.treasure = 0;
    global.combo = 0;
    global.combotime = 0;
    global.pizzacoin = 0;
    global.toppintotal = 1;
    global.hit = 0;
    in_water = 0;
    key_particles = 0;
    barrel = 0;
    bounce = 0;
    a = 0;
    idle = 0;
    attacking = 0;
    slamming = 0;
    superslam = 0;
    machpunchAnim = 0;
    punch = 0;
    machfreefall = 0;
    shoot = 1;
    instakillmove = 0;
    windingAnim = 0;
    facestompAnim = 0;
    ladderbuffer = 0;
    chainsaw = 50;
    toomuchalarm1 = 0;
    toomuchalarm2 = 0;
    dashdust = 0;
    throwforce = 0;
    hurtsound = 0;
    idleanim = 0;
    momemtum = 0;
    cutscene = 0;
    grabbing = 0;
    dir = xscale;
    shotgunAnim = 0;
    goingdownslope = 0;
    goingupslope = 0;
    fallinganimation = 0;
    bombpeptimer = 100;
    slapbuffer = 0;
    slaphand = 1;
    suplexmove = 0;
    suplexhavetomash = 0;
    timeuntilhpback = 300;
    anger = 0;
    angry = 0;
    baddiegrabbedID = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a;

a = random_range(-40, 40);
alarm[10] = 5;
instance_create(x + a, y + a, obj_machalleffect);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>combo = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 0;
movespeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hurted = 0;
inv_frames = 0;
key_particles = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 1;
alarm[5] = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 0;
alarm[6] = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>start_running = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 0;
hurtbounce = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inv_frames = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flash = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_player)
{
    switch (state)
    {
        case 0:
            scr_player_normal();
            break;
        
        case 3:
            scr_player_slap();
            break;
        
        case 85:
            scr_player_charge();
            break;
        
        case 4:
            scr_player_cheesepep();
            break;
        
        case 2:
            scr_player_cheeseball();
            break;
        
        case 5:
            scr_player_cheesepepstick();
            break;
        
        case 6:
            scr_player_boxxedpep();
            break;
        
        case 7:
            scr_player_pistolaim();
            break;
        
        case 8:
            scr_player_climbwall();
            break;
        
        case 9:
            scr_player_knightpepslopes();
            break;
        
        case 10:
            scr_player_portal();
            break;
        
        case 11:
            scr_player_secondjump();
            break;
        
        case 12:
            scr_player_chainsawbump();
            break;
        
        case 13:
            scr_player_handstandjump();
            break;
        
        case 14:
            scr_player_gottreasure();
            break;
        
        case 15:
            scr_player_knightpep();
            break;
        
        case 16:
            scr_player_knightpepattack();
            break;
        
        case 17:
            scr_player_meteorpep();
            break;
        
        case 18:
            scr_player_bombpep();
            break;
        
        case 19:
            scr_player_grabbing();
            break;
        
        case 20:
            scr_player_chainsawpogo();
            break;
        
        case 21:
            scr_player_shotgunjump();
            break;
        
        case 22:
            scr_player_stunned();
            break;
        
        case 23:
            scr_player_highjump();
            break;
        
        case 24:
            scr_player_chainsaw();
            break;
        
        case 25:
            scr_player_facestomp();
            break;
        
        case 27:
            scr_player_timesup();
            break;
        
        case 28:
            scr_player_machroll();
            break;
        
        case 30:
            scr_player_pistol();
            break;
        
        case 29:
            scr_player_shotgun();
            break;
        
        case 31:
            scr_player_machfreefall();
            break;
        
        case 32:
            scr_player_throw();
            break;
        
        case 34:
            scr_player_superslam();
            break;
        
        case 33:
            scr_player_slam();
            break;
        
        case 35:
            scr_player_skateboard();
            break;
        
        case 36:
            scr_player_grind();
            break;
        
        case 37:
            scr_player_grab();
            break;
        
        case 38:
            scr_player_punch();
            break;
        
        case 39:
            scr_player_backkick();
            break;
        
        case 40:
            scr_player_uppunch();
            break;
        
        case 41:
            scr_player_shoulder();
            break;
        
        case 42:
            scr_player_backbreaker();
            break;
        
        case 43:
            scr_player_bossdefeat();
            break;
        
        case 45:
            scr_player_bossintro();
            break;
        
        case 53:
            scr_player_smirk();
            break;
        
        case 44:
            scr_player_pizzathrow();
            break;
        
        case 46:
            scr_player_gameover();
            break;
        
        case 83:
            scr_player_Sjumpland();
            break;
        
        case 82:
            scr_player_freefallprep();
            break;
        
        case 80:
            scr_player_runonball();
            break;
        
        case 79:
            scr_player_boulder();
            break;
        
        case 47:
            scr_player_keyget();
            break;
        
        case 48:
            scr_player_tackle();
            break;
        
        case 51:
            scr_player_slipnslide();
            break;
        
        case 50:
            scr_player_ladder();
            break;
        
        case 49:
            scr_player_jump();
            break;
        
        case 55:
            scr_player_victory();
            break;
        
        case 52:
            scr_player_comingoutdoor();
            break;
        
        case 54:
            scr_player_Sjump();
            break;
        
        case 56:
            scr_player_Sjumpprep();
            break;
        
        case 57:
            scr_player_crouch();
            break;
        
        case 58:
            scr_player_crouchjump();
            break;
        
        case 59:
            scr_player_crouchslide();
            break;
        
        case 60:
            scr_player_mach1();
            break;
        
        case 61:
            scr_player_mach2();
            break;
        
        case 81:
            scr_player_mach3();
            break;
        
        case 62:
            scr_player_machslide();
            break;
        
        case 63:
            scr_player_bump();
            break;
        
        case 64:
            scr_player_hurt();
            break;
        
        case 65:
            scr_player_freefall();
            break;
        
        case 68:
            scr_player_freefallland();
            break;
        
        case 66:
            scr_player_hang();
            break;
        
        case 69:
            scr_player_door();
            break;
        
        case 75:
            scr_player_barrelnormal();
            break;
        
        case 74:
            scr_player_barrelfall();
            break;
        
        case 73:
            scr_player_barrelmach1();
            break;
        
        case 72:
            scr_player_barrelmach2();
            break;
        
        case 71:
            scr_player_barrelfloat();
            break;
        
        case 70:
            scr_player_barrelcrouch();
            break;
        
        case 76:
            scr_player_barrelslipnslide();
            break;
        
        case 77:
            scr_player_barrelroll();
            break;
        
        case 78:
            scr_player_current();
            break;
    }
    
    if (global.playerhealth &lt;= 0 &amp;&amp; state != 46)
    {
        image_index = 0;
        sprite_index = spr_player_deathstart;
        state = 46;
    }
    
    if (state == 46 &amp;&amp; sprite_index == spr_player_deathend &amp;&amp; y &gt; (room_height + 400))
        scr_playerreset();
    
    if (!instance_exists(baddiegrabbedID) &amp;&amp; (state == 37 || state == 34 || state == 85))
        state = 0;
    
    if (!(state == 37 || state == 34))
        baddiegrabbedID = 0;
    
    if (place_meeting(x, y + 1, obj_grindrail) &amp;&amp; place_meeting(x, y + 1, obj_onewaysolid) &amp;&amp; vsp &gt; 0 &amp;&amp; mach2 &gt; 0)
        state = 36;
    
    if (anger == 0)
        angry = 0;
    
    if (anger &gt; 0)
    {
        angry = 1;
        anger -= 1;
    }
    
    if (state == 60 &amp;&amp; place_meeting(x, y + 1, obj_collisionparent))
    {
        if (!audio_is_playing(sound_dash1))
            scr_sound(36);
    }
    else
    {
        audio_stop_sound(sound_dash1);
    }
    
    if (state == 61)
    {
        if (!audio_is_playing(sound_dash2))
            scr_sound(35);
    }
    else
    {
        audio_stop_sound(sound_dash2);
    }
    
    if (state == 81)
    {
        if (!audio_is_playing(sound_maxspeed))
            scr_sound(34);
    }
    else
    {
        audio_stop_sound(sound_maxspeed);
    }
    
    if (state == 28)
    {
        if (!audio_is_playing(sound_machroll))
            scr_sound(25);
    }
    else
    {
        audio_stop_sound(sound_machroll);
    }
    
    if (sprite_index == spr_player_winding &amp;&amp; state != 0)
        windingAnim = 0;
    
    if (state == 56)
    {
    }
    else
    {
        audio_stop_sound(sound_superjumpcharge2);
    }
    
    if (suplexmove == 1 &amp;&amp; place_meeting(x, y + 1, obj_collisionparent))
        suplexmove = 0;
    
    if (obj_player.state != 13)
        grav = 0.5;
    
    if (sprite_index == spr_player_idlevomit &amp;&amp; image_index &gt; 28 &amp;&amp; image_index &lt; 43)
        instance_create(x + random_range(-5, 5), y + 46, obj_vomit);
    
    if (sprite_index == spr_player_idlevomitblood &amp;&amp; image_index &gt; 28 &amp;&amp; image_index &lt; 43)
    {
        with (instance_create(x + random_range(-5, 5), y + 46, obj_vomit))
            sprite_index = spr_vomit2;
    }
    
    if (global.playerhealth == 1 &amp;&amp; !instance_exists(obj_sweat) &amp;&amp; obj_player.state == 0)
        instance_create(x, y, obj_sweat);
    
    if (angry == 1 &amp;&amp; !instance_exists(obj_angrycloud) &amp;&amp; obj_player.state == 0)
        instance_create(x, y, obj_angrycloud);
    
    if (global.combotime &gt; 0)
        global.combotime -= 0.5;
    
    if (global.combotime == 0 &amp;&amp; global.combo != 0)
        global.combo = 0;
    
    if (input_buffer_jump &lt; 8)
        input_buffer_jump++;
    
    if (input_buffer_secondjump &lt; 8)
        input_buffer_secondjump++;
    
    if (input_buffer_highjump &lt; 8)
        input_buffer_highjump++;
    
    if (slapbuffer &lt; 8)
        slapbuffer++;
    
    if (key_particles == 1)
        instance_create(random_range(x + 25, x - 25), random_range(y + 35, y - 25), obj_keyeffect);
    
    if (!place_meeting(x + sign(hsp), y, obj_collisionparent) &amp;&amp; !place_meeting(x + sign(hsp), y + 1, obj_collisionparent) &amp;&amp; place_meeting(x + sign(hsp), y + 2, obj_collisionparent))
        goingdownslope = 1;
    else
        goingdownslope = 0;
    
    if (place_meeting(x + sign(hsp), y, obj_collisionparent) &amp;&amp; !place_meeting(x + sign(hsp), y - 1, obj_collisionparent))
        goingupslope = 1;
    else
        goingupslope = 0;
    
    if (inv_frames == 0 &amp;&amp; hurted == 0)
        image_alpha = 1;
    
    if (state == 61 || state == 85 || state == 35 || state == 15 || state == 6 || state == 4 || state == 9 || state == 16 || state == 18 || state == 25 || state == 31 || state == 25 || state == 28 || state == 81 || state == 65 || state == 54)
        attacking = 1;
    else
        attacking = 0;
    
    if (state == 32 || state == 38 || state == 39 || state == 41 || state == 40)
        grabbing = 1;
    else
        grabbing = 0;
    
    if (state == 81 || state == 35 || state == 26 || state == 65 || state == 34 || state == 54 || state == 28 || state == 31)
        instakillmove = 1;
    else
        instakillmove = 0;
    
    if (flash == 1 &amp;&amp; alarm[0] &lt;= 0)
        alarm[0] = 0.15 * room_speed;
    
    if (state != 81 &amp;&amp; state != 62)
        autodash = 0;
    
    if ((state != 49 &amp;&amp; state != 58 &amp;&amp; state != 3) || vsp &lt; 0)
        fallinganimation = 0;
    
    if (state != 68 &amp;&amp; state != 0 &amp;&amp; state != 62)
        facehurt = 0;
    
    if (state != 0 &amp;&amp; state != 62)
        machslideAnim = 0;
    
    if (state != 0)
    {
        idle = 0;
        dashdust = 0;
    }
    
    if (state != 60 &amp;&amp; state != 49 &amp;&amp; state != 13 &amp;&amp; state != 0 &amp;&amp; state != 61 &amp;&amp; state != 81 &amp;&amp; state != 82 &amp;&amp; state != 15 &amp;&amp; state != 29 &amp;&amp; state != 9)
        momemtum = 0;
    
    if (state != 24)
        chainsaw = 50;
    
    if (movespeed &lt; 8)
        dashdust = 0;
    
    if (state != 54 &amp;&amp; state != 56)
        a = 0;
    
    if (state != 37 &amp;&amp; state != 32 &amp;&amp; state != 41 &amp;&amp; state != 38 &amp;&amp; state != 39 &amp;&amp; state != 40 &amp;&amp; state != 33)
        throwforce = 0;
    
    if (state != 25)
        facestompAnim = 0;
    
    if (state != 30 &amp;&amp; state != 29 &amp;&amp; state != 21)
        shoot = 1;
    
    if (state != 33)
        slamming = 0;
    
    if (state != 65 &amp;&amp; state != 25 &amp;&amp; state != 34 &amp;&amp; state != 68)
        superslam = 0;
    
    if (state != 61)
        machpunchAnim = 0;
    
    if (state != 61)
        machfreefall = 0;
    
    if (state != 49)
        ladderbuffer = 0;
    
    if (state != 49)
        stompAnim = 0;
    
    if ((state == 81 || state == 61 || state == 28 || state == 85 || state == 13 || (state == 62 &amp;&amp; mach2 &gt;= 100)) &amp;&amp; !instance_exists(obj_mach3effect))
    {
        toomuchalarm1 = 6;
        instance_create(x, y, obj_mach3effect);
    }
    
    if (toomuchalarm1 &gt; 0)
    {
        toomuchalarm1 -= 1;
        
        if (toomuchalarm1 &lt;= 0 &amp;&amp; (state == 81 || state == 61 || state == 85 || (state == 62 &amp;&amp; mach2 &gt;= 100) || state == 28 || state == 13 || (state == 24 &amp;&amp; mach2 &gt;= 100)))
        {
            instance_create(x, y, obj_mach3effect);
            toomuchalarm1 = 6;
        }
    }
    
    if (state != 65 &amp;&amp; state != 34)
        obj_camera.zoom = 0;
    
    if (state != 63 &amp;&amp; state != 57 &amp;&amp; state != 6 &amp;&amp; (state != 30 &amp;&amp; sprite_index != spr_player_crouchshoot) &amp;&amp; state != 56 &amp;&amp; state != 24 &amp;&amp; state != 28 &amp;&amp; state != 64 &amp;&amp; state != 59 &amp;&amp; state != 58)
        mask_index = spr_player_mask;
    else
        mask_index = spr_crouchmask;
    
    if (state == 14 || sprite_index == spr_knightpep_start || sprite_index == spr_knightpep_thunder || state == 47 || state == 69 || state == 55 || state == 52 || state == 46)
        cutscene = 1;
    else
        cutscene = 0;
    
    if (state != 64)
        hurtsound = 0;
    
    if ((place_meeting(x, y, obj_door) || place_meeting(x, y, obj_keydoor) || (place_meeting(x, y, obj_exitgate) &amp;&amp; global.panic == 1)) &amp;&amp; !instance_exists(obj_uparrow) &amp;&amp; place_meeting(x, y + 1, obj_collisionparent) &amp;&amp; state == 0)
        instance_create(x, y, obj_uparrow);
    
    if (state == 61 &amp;&amp; !instance_exists(obj_speedlines))
        instance_create(x, y, obj_speedlines);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hookleft">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((state == 49 || state == 54 || state == 61) &amp;&amp; other.drop == 0)
{
    state = 66;
    image_xscale = -1;
    other.hooked = 1;
    
    if (mach2 &gt;= 35)
        other.hspeed = -10;
    
    if (other.hspeed == -10)
        sprite_index = spr_player_hangslide;
    
    if (other.hspeed == 0)
        sprite_index = spr_player_hang;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hookup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((state == 49 || state == 54 || state == 61 || obj_player.state == 81) &amp;&amp; other.drop == 0)
{
    mach2 = 0;
    state = 66;
    image_xscale = 1;
    other.hooked = 1;
    other.vspeed = -5;
    
    if (other.hspeed == 10)
        sprite_index = spr_player_hangslide;
    
    if (other.hspeed == 0)
        sprite_index = spr_player_hang;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hook">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((state == 49 || state == 54 || state == 61 || obj_player.state == 81) &amp;&amp; y &gt; other.y &amp;&amp; other.drop == 0)
{
    state = 66;
    image_xscale = 1;
    other.hooked = 1;
    
    if (mach2 &gt;= 35)
        other.hspeed = 10;
    
    if (other.hspeed == 10)
        sprite_index = spr_player_hangslide;
    
    if (other.hspeed == 0)
        sprite_index = spr_player_hang;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_thunder">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_knightpep_thunder;
scr_sound(39);
instance_destroy(other.id);
image_index = 0;

with (obj_camera)
{
    shake_mag = 10;
    shake_mag_acc = 30 / room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_swordstone">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.image_index == 0 &amp;&amp; state == 0 &amp;&amp; place_meeting(x, y + 1, obj_collisionparent))
{
    scr_sound(16);
    momentum = 0;
    movespeed = 0;
    other.image_index = 1;
    image_index = 0;
    sprite_index = spr_knightpep_start;
    state = 15;
    hsp = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bombexplosion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hurted == 0 &amp;&amp; cutscene == 0 &amp;&amp; state != 54 &amp;&amp; state != 56)
{
    if (state == 15 || state == 16)
    {
        scr_sound(sfx_metaldestroy);
        
        with (instance_create(x, y, obj_knightdebris))
            image_index = 0;
        
        with (instance_create(x, y, obj_knightdebris))
            image_index = 1;
        
        with (instance_create(x, y, obj_knightdebris))
            image_index = 2;
        
        with (instance_create(x, y, obj_knightdebris))
            image_index = 3;
        
        with (instance_create(x, y, obj_knightdebris))
            image_index = 4;
        
        with (instance_create(x, y, obj_knightdebris))
            image_index = 5;
        
        if (x != other.x)
            obj_player.hsp = sign(x - other.x) * 5;
    }
    
    hurted = 1;
    vsp = -4;
    image_index = 0;
    sprite_index = spr_bombpep_end;
    state = 18;
    bombpeptimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bomb">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hurted == 0 &amp;&amp; state != 18 &amp;&amp; state != 32 &amp;&amp; other.countdown &gt; 30)
{
    scr_sound(22);
    bombpeptimer = 200;
    hsp = 0;
    movespeed = 0;
    image_index = 0;
    state = 18;
    sprite_index = spr_bombpep_intro;
    instance_create(x + (image_xscale * 40), y, obj_punchdust);
    instance_destroy(other.id);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_pizzakinshroom) &amp;&amp; global.shroomfollow == 1)
    instance_destroy(obj_pizzakinshroom);

if (instance_exists(obj_pizzakincheese) &amp;&amp; global.cheesefollow == 1)
    instance_destroy(obj_pizzakincheese);

if (instance_exists(obj_pizzakintomato) &amp;&amp; global.tomatofollow == 1)
    instance_destroy(obj_pizzakintomato);

if (instance_exists(obj_pizzakinsausage) &amp;&amp; global.sausagefollow == 1)
    instance_destroy(obj_pizzakinsausage);

if (instance_exists(obj_pizzakinpineapple) &amp;&amp; global.pineapplefollow == 1)
    instance_destroy(obj_pizzakinpineapple);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = player_x;
y = player_y;

if (global.shroomfollow == 1)
    instance_create(x, y, obj_pizzakinshroom);

if (global.cheesefollow == 1)
    instance_create(x, y, obj_pizzakincheese);

if (global.tomatofollow == 1)
    instance_create(x, y, obj_pizzakintomato);

if (global.sausagefollow == 1)
    instance_create(x, y, obj_pizzakinsausage);

if (global.pineapplefollow == 1)
    instance_create(x, y, obj_pizzakinpineapple);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 0; i &lt; 100; i += 1)
    global.CollectablesArray[i] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pal_swap_set(232, global.paletteselect, 0);
draw_sprite_ext(sprite_index, image_index, x, y, xscale, yscale, image_angle, image_blend, image_alpha);
shader_reset();

if (flash)
{
    shader_set(shd_hit);
    draw_sprite_ext(sprite_index, image_index, x, y, xscale, yscale, image_angle, image_blend, image_alpha);
    shader_reset();
}
else
{
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
